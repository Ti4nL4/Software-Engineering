{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { getData, _Render } from '../api/report';\n\nconst handledata = data => {\n  let time = [];\n  let count = [];\n\n  for (let i = 0; i < data.length; i++) {\n    if (time.length == 0) {\n      time.push(data[i].Buy_Time);\n    } else {\n      let check = false;\n\n      for (let j = 0; j < time.length; j++) {\n        if (data[i].Buy_Time == time[j]) {\n          check = true;\n        }\n      }\n\n      if (check == false) {\n        time.push(data[i].Buy_Time);\n      }\n    }\n  }\n\n  console.log(time);\n\n  for (let i = 0; i < time.length; i++) {\n    let temp = 0;\n\n    for (let j = 0; j < data.length; j++) {\n      if (data[j].Buy_Time == time[i]) {\n        temp += data[j].Quantity;\n      }\n    }\n\n    count.push(temp);\n  }\n\n  console.log(count);\n  time.sort();\n  const dataout = [];\n\n  for (let i = 0; i < count.length; i++) {\n    let temp = new Date(time[i]);\n    temp = temp.toLocaleDateString('en-US');\n    const obj = {\n      Buy_Time: temp,\n      Quantity: count[i]\n    };\n    dataout.push(obj);\n  }\n\n  console.log(dataout);\n  return dataout;\n};\n\nconst RenderReport = (checkInDate, checkOutDate) => {\n  _s();\n\n  const [data, setData] = useState('');\n\n  if (checkInDate && checkOutDate) {}\n\n  getData(setData);\n  return handledata(data);\n};\n\n_s(RenderReport, \"jCRLMVbXheElRuRLveqJ2tcOfW0=\");\n\n_c = RenderReport;\n\nconst SelectData = (checkInDate, checkOutDate) => {\n  let data = _Render(checkInDate, checkOutDate);\n\n  return handledata(data);\n};\n\n_c2 = SelectData;\nexport { RenderReport, SelectData };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderReport\");\n$RefreshReg$(_c2, \"SelectData\");","map":{"version":3,"sources":["/home/quan/Documents/cnpm/new/Software-Engineering/pos/src/context/report.js"],"names":["useState","useEffect","getData","_Render","handledata","data","time","count","i","length","push","Buy_Time","check","j","console","log","temp","Quantity","sort","dataout","Date","toLocaleDateString","obj","RenderReport","checkInDate","checkOutDate","setData","SelectData"],"mappings":"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","sourcesContent":["import {useState, useEffect} from \"react\";\nimport {getData, _Render} from '../api/report';\n\nconst handledata=(data)=>{\n\tlet time = []\n    let count = []\n    for (let i = 0; i< data.length; i++) {\n      if (time.length == 0 ){\n        time.push(data[i].Buy_Time)\n      }\n      else {\n        let check = false\n        for (let j = 0; j < time.length; j++){\n          if (data[i].Buy_Time==time[j]){\n            check = true\n          }\n        }\n        if (check == false){\n          time.push(data[i].Buy_Time)\n        }\n      }\n    }\n    console.log(time)\n    for (let i = 0; i < time.length; i++){\n      let temp = 0\n      for (let j = 0; j < data.length; j++){\n        if (data[j].Buy_Time == time[i]){\n           temp += data[j].Quantity\n        }\n      }\n      count.push(temp)\n    }\n    console.log(count)\n    time.sort();\n    const dataout = []\n    for (let i = 0; i < count.length; i++){\n      let temp = new Date(time[i])\n      temp = temp.toLocaleDateString('en-US')\n      const obj = {\n        Buy_Time: temp,\n        Quantity: count[i]\n      }\n      dataout.push(obj)\n    }\n    console.log(dataout)\n\treturn dataout;\n}\n\nconst RenderReport = (checkInDate,checkOutDate) => {\n\n\tconst [data,setData]=useState('')\n\tif(checkInDate&&checkOutDate){}\n    getData(setData);\n    return handledata(data);\n}\n\nconst SelectData = (checkInDate,checkOutDate)=>{\n\tlet data = _Render(checkInDate,checkOutDate)\n\treturn handledata(data);\n}\n\nexport {RenderReport, SelectData};"]},"metadata":{},"sourceType":"module"}